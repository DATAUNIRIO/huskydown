# Build on OSX and linux (use our docker container)

warnings_are_errors: false

os:
  - osx
  - linux
  
env:
 global:
  - REPO=$DOCKER_USER/huskydown
  
language: if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then r ; fi
cache: if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then packages ; fi 

pandoc_version: 1.17.2

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap caskroom/fonts  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install font-eb-garamond font-source-code-pro font-lato  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo tlmgr update --self  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo tlmgr install biblatex titling titlesec quotchap lettrine appendix units tocloft draftwatermark everypage wasysym logreq xstring collection-fontsrecommended texliveonfly   ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then R -e 'install.packages("devtools")'  ; fi
  
after_script:
  - R -e "devtools::install_github('benmarwick/huskydown')"
  # remove pre-built PDF,
  - R -e "unlink('index', recursive = TRUE)"
  # make a PhD thesis from the template
  - R -e "rmarkdown::draft('index.Rmd', template = 'thesis', package = 'huskydown', create_dir = TRUE, edit = FALSE)"
  #  render new thesis into a PDF
  - R -e "setwd('index'); bookdown::render_book('index.Rmd', huskydown::thesis_pdf(latex_engine = 'xelatex'))"
  #  check that we got a PDF
  - R -e "file.exists('index/_book/thesis.pdf')"
  - R -e "file.info('index/_book/thesis.pdf')"
 
 ; fi
 
 if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
 
 language: generic
 
 sudo: required    
 services:
  - docker
  
before_install:
   # create & run container using our dockerfile, i.e. compile pkg and render Rmd to Word doc
  - docker build -t $REPO .
  
# push our custom docker container to docker hub, env vars stored on travis-ci.org
# don't forget to set these at https://travis-ci.org/.../...settings
after_success:
  - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
  - export REPO=$DOCKER_USER/huskydown
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  - docker build -f Dockerfile -t $REPO:$COMMIT .
  - docker tag $REPO:$COMMIT $REPO:$TAG
  - docker tag $REPO:$COMMIT $REPO:travis-$TRAVIS_BUILD_NUMBER
  - docker push $REPO
 
 ; fi

  



